//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table user {
  id String [pk]
  username String [unique, not null]
  firstname String [not null, default: '']
  lastname String [not null, default: '']
  email String [unique, not null]
  password String [not null]
  mobile String [not null]
  theme ThemeType [not null, default: 'Light']
  bio String [not null]
  dob String [not null]
  isVerified Boolean [not null]
  profileImage String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  followers friends [not null]
  following friends [not null]
  posts post [not null]
  comments comment [not null]
  notifications notifications [not null]
  activity activity [not null]
  conversations conversations [not null]
  sentMessages messages [not null]
  receiveMessages messages [not null]
}

Table friends {
  id String [pk]
  user user [not null]
  userId String [not null]
  follower user [not null]
  friendId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  block Boolean [not null, default: false]
  accepted Boolean [not null, default: false]
  conversations conversations [not null]

  indexes {
    (friendId, userId) [unique]
  }
}

Table post {
  id String [pk]
  user user [not null]
  userId String [not null]
  media String [not null, default: '']
  content String [not null, default: '']
  type PostType [not null, default: 'CONTENT_ONLY']
  likeId String [unique, not null]
  likeCounter like [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  comments comment [not null]
}

Table comment {
  id String [pk]
  content String [not null]
  postId String [not null]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  parrentCommentId String
  parrentId post [not null]
  user user [not null]
  parrent comment
  subComments comment [not null]
}

Table like {
  id String [pk]
  likeCount BigInt [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  activities activity [not null]
  post post
}

Table activity {
  id String [pk]
  userId String [not null]
  user user [not null]
  likeCountId like [not null]
  likeId String [not null]

  indexes {
    (userId, likeId) [unique]
  }
}

Table notifications {
  id String [pk]
  content String [not null]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]
  type NotificationType [not null]
  redirect String [not null]
  read Boolean [not null, default: false]
  user user [not null]
}

Table conversations {
  id String [pk]
  userId String [not null]
  friendId String [not null]
  friend friends [not null]
  user user [not null]
  messages messages [not null]
}

Table messages {
  id String [pk]
  conversationsId String [not null]
  senderId String [not null]
  receiverId String [not null]
  content String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  sender user [not null]
  receiver user [not null]
  conversationId conversations [not null]
}

Enum NotificationType {
  POST_LIKE
  POST_COMMENT
  COMMENT_REPLY
}

Enum PostType {
  CONTENT_ONLY
  MEDIA_ONLY
  MEDIA_WITH_CONTENT_ONLY
}

Enum ThemeType {
  Light
  Dark
}

Ref: friends.userId > user.id [delete: Cascade]

Ref: friends.friendId > user.id [delete: Cascade]

Ref: post.userId > user.id [delete: Cascade]

Ref: post.likeId - like.id

Ref: comment.postId > post.id [delete: Cascade]

Ref: comment.userId > user.id [delete: Cascade]

Ref: comment.parrentCommentId - comment.id [delete: Cascade]

Ref: activity.userId > user.id

Ref: activity.likeId > like.id

Ref: notifications.userId > user.id

Ref: conversations.friendId > friends.id

Ref: conversations.userId > user.id

Ref: messages.senderId > user.id

Ref: messages.receiverId > user.id

Ref: messages.conversationsId > conversations.id