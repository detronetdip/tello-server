version: "3"

services:
  db-cache:
    image: redis
    container_name: cache-db
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
  db-mongo:
    image: mongo
    container_name: mongo-database
    ports:
      - "27017:27017"
    healthcheck:
      test: [ "CMD", "echo", "db.runCommand({serverStatus:1}).ok" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
  db-postgress:
    image: postgres
    container_name: postgres-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=mydb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
  message-queue:
    image: rabbitmq:3.8-management
    container_name: message-queue
    volumes:
      - "/home/ayondip/final-project-db/rabbitmq:/var/lib/rabbitmq"
    ports:
      - "8080:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
  auth_server:
    image: auth-server
    env_file:
      - ./auth_service/.env
    depends_on:
      db-mongo:
        condition: service_healthy
      db-postgress:
        condition: service_healthy
      db-cache:
        condition: service_healthy
      message-queue:
        condition: service_healthy
    container_name: auth_server
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
  resource_server:
    image: resource-server
    env_file:
      - ./resource_service/.env
    depends_on:
      db-mongo:
        condition: service_healthy
      db-postgress:
        condition: service_healthy
      db-cache:
        condition: service_healthy
      message-queue:
        condition: service_healthy
    container_name: resource_server
    build:
      context: ./resource_service
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
